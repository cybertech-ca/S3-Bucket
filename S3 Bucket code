AWSTemplateFormatVersion: '2010-09-09'

Parameters:

  ACL:
    Type: String
    Description: Want to apply a predefined access control list to grant specific permissions?
    # S3 Canned ACLs: https://docs.aws.amazon.com/AmazonS3/latest/dev/acl-overview.html#canned-acl
    AllowedValues:
        # private - (Bucket & Object): Owner gets FULL_CONTROL. No body else has access rights. *Default*
      - "Private"
        # public-read - (Bucket & Object): Owner gets FULL_CONTROL.  The All Users-Group have READ access.
      - "PublicRead"
        # public-read-write - (Bucket & Object): Owner gets FULL_CONTROL. The All Users-Group have READ and WRITE access. *Not Best Practise*
      - "PublicReadWrite"
        # aws-exec-read - (Bucket & Object): Owner gets FULL_CONTROL. EC2 inst. gets READ access to GET an AMI from S3.
      - "AwsExecRead"
        # authenitcated-read - (Bucket & Object): Owner gets FULL_CONTROL. The Authenticated Users-Group have READ access.
      - "AuthenticatedRead"
        # bucket-owner-read - (Object): Object owner gets FULL_CONTROL. Bucket owner gets READ access. *Could be specified at time of bucket creation.*
      - "BucketOwnerRead"
        # bucket-owner-full-control - (Object): Both object owner and bucket owner get FULL_CONTROL over objects. *Could be specified at time of bucket creation.*
      - "BucketOwnerFullControl"
        # log-delivery-write - (Bucket): The LogDelivery group gets WRITE and READ_ACP permissions on the bucket. *See S3 Server Access Logging. Get extra info: https://docs.aws.amazon.com/AmazonS3/latest/dev/ServerLogs.html *
      - "LogDeliveryWrite"
        # none - (N/A): No canned ACL defined
      - "None"
    Default: "None"

  BucketName: 
    Type: String
    Description:S3 Bucket Name?
    # Bucket Restrictions: https://docs.aws.amazon.com/AmazonS3/latest/dev/BucketRestrictions.html
    AllowedPattern: "^([a-z0-9]{1}[a-z0-9-]{1,61}[a-z0-9]{1})$"

  Encryption:
    Type: String
    Description: "Enable default encryption for objects stored in the bucket?"
    AllowedValues:
      - "true"
      - "false"
    ConstraintDescription: "Required (true/false)"
    Default: "true"

  KmsKeyId:
    Type: String
    Description: Custom KMS Key for encryption?  (Requires a valid KMS Key Id)
    AllowedPattern: "^([a-z0-9]{8}-[a-z0-9]{4}-[a-z0-9]{4}-[a-z0-9]{4}-[a-z0-9]{12})$"
    Default: "12345678-aaaa-bbbb-cccc-123456789abc"

  Versioning:
    Type: String
    Description: Enable versioning for objects in the S3 Bucket?
    AllowedValues:
      - "Enabled"
      - "Suspended"
    Default: "Suspended"


Metadata:

  Purpose:
    Description: "S3 bucket for basic object storage. Parameters 
                  provide the ability to use S3 canned ACLs, enable default encryption (with or without a
                  custom KMS Key) and enable object versioning. 
                  
  
  AWS::CloudFormation::Interface:
    ParameterGroups:
      -
        Label:
          default: "S3 Config Parameters"
        Parameters:
          - BucketName
          - ACL
          - Versioning
          - Encryption
          - KmsKeyId
    ParameterLabels:
      BucketName:
        default: "S3 Bucket Name"
      ACL:
        default: "Bucket Access Control List"
      Versioning:
        default: "Object Versioning"
      Encryption:
        default: "Enable Default Encryption"
      KmsKeyId:
        default: "KMS Key Id"
          

Conditions:
  hasACL:
    !Not [!Equals [!Ref ACL, "None"]]

  isEncrypted:
    !Equals [!Ref Encryption, "true"]

  hasKmsKey:
    !Not [!Equals [!Ref KmsKeyId, "12345678-aaaa-bbbb(The One to be Replaced)-cccc-123456789abc"]]

  useCustomKey: !And
  - Condition: isEncrypted
  - Condition: hasKmsKey


Resources:

  Bucket:
    Type: AWS::S3::Bucket
    Properties:
      AccessControl: !If [hasACL, !Ref ACL, !Ref "AWS::NoValue"]
      BucketEncryption: 
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              KMSMasterKeyID: !If [useCustomKey, !Ref KmsKeyId, !Ref "AWS::NoValue"]
              SSEAlgorithm: !If [useCustomKey, "aws:kms", "AES256"]
      BucketName: !Ref BucketName
      VersioningConfiguration:
        Status: !Ref Versioning
      

Outputs:

  BucketURL:
    Value: !Join ['', ["https://", !GetAtt Bucket.DomainName]]
    Export:
      Name: !Join ['', [!Ref "AWS::StackName", "BucketURL"]]

  BucketARN:
    Value: !GetAtt Bucket.Arn
    Export:
      Name: !Join ['', [!Ref "AWS::StackName", "BucketARN"]]
